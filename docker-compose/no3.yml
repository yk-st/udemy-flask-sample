version: '3.5'
services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: nginx_koz
    networks:
      nginx_net:
        ipv4_address: 172.16.0.9
    ports:
      - "19689:80"
      - "19688:80"
    volumes:
      - html:/usr/share/nginx/html
      - socket:/tmp
      - socket_api:/tmp_api

  nginx_proxy:
    build:
      context: nginx_proxy
      dockerfile: Dockerfile
    container_name: nginx_proxy_koz
    networks:
      - nginx_net
    depends_on:
      - nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # HTTPS用の証明書とキーをホストOSから、ゲストOSに連結する
      - /etc/letsencrypt:/etc/letsencrypt
      - html_proxy:/usr/share/nginx/html

  app:
    build: ./web
    networks:
      - app_net
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      CSRF_SECRET: ${CSRF_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
    volumes:
      - socket:/tmp
      - ./migrations/:/root/udemy-flask-sample/web/migrations

  #　データ保存Mysql
  mysql:
    build:
      context: mysql
      dockerfile: Dockerfile
    volumes:
      # 一旦コメントアウト
      - mysql:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    restart: always
    networks:
      - app_net
    environment:
      MYSQL_DATABASE: ${DB}
      MYSQL_ROOT_PASSWORD: ${ROOT}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    container_name: mysql_koz

  certbot:
    image: certbot/certbot:v1.26.0
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - html_proxy:/usr/share/nginx/html
    depends_on:
      - nginx_proxy
    # 新規作成(サブドメも含めて取得する)
    #entrypoint: ["certbot", "certonly", "--register-unsafely-without-email","-d $DOMAIN", "-d $API_DOMAIN",  "-d $KEY_DOMAIN", "-m $MAIL", "--agree-tos","--webroot", "-w","/usr/share/nginx/html/"]
    # 更新の時はこちら
    # 参考
    # https://hogetech.info/network/web/lets-encrypt
    # https://qiita.com/HeRo/items/f9eb8d8a08d4d5b63ee9
    # https://server-recipe.com/1577/
    #entrypoint: ["certbot", "renew"]
    # 普段
    command: ["--version"]
 

volumes:
  html:
  html_proxy:
  socket:
  socket_api:
  mysql:

networks:
  nginx_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24